<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="680" height="560" creationComplete="LiveStreams()">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			
			import flash.display.MovieClip;
			import flash.events.*;
			import flash.media.*;
			import flash.net.NetConnection;
			import flash.net.NetStream;
			import mx.utils.ObjectUtil;
			
			var loginDate:String;
			var nc:NetConnection;
			var nc2:NetConnection;
			var ns:NetStream;
			var ns2:NetStream;
			var video:Video;
			var video2:Video;
			var camera:Camera;
			var camera2:Camera;
			var mic:Microphone;
			var mic2:Microphone;
			private var meta:Object;
			private var meta2:Object;
			var videoCodec:H264VideoStreamSettings;
			
			protected function back(event:MouseEvent):void
				{
					navigateToURL(new URLRequest('http://localhost/real/homeadmin/bin/homeadmin.html'),"_self")
				}
				
			protected function kamera1(event:MouseEvent):void
				{					
					ns2.close();
					if (camera != null || mic != null)
				{
					// mulai publish
					// trigger NetStream.Publish.Start
					ns.publish(this.txtStream.text, "live");
				} else 
				{
					trace("Please check your camera and microphone");
				}
				}
				
			protected function kamera2(event:MouseEvent):void
				{
					ns.close();
					if (camera2 != null || mic2 != null)
				{
					// mulai publish
					// trigger NetStream.Publish.Start
					ns2.publish(this.txtStream.text, "live");
				} else 
				{
					trace("Please check your camera and microphone");
				}
				}
			
			
			public function LiveStreams()
			{
				startBtn.addEventListener(MouseEvent.CLICK, startHandler);
				/*				clearBtn.addEventListener(MouseEvent.CLICK, clearHandler);*/
				stopBtn.addEventListener(MouseEvent.CLICK, stopHandler);
			}
			
			private function ns_onMetaData(item:Object):void 
			{
				trace("meta");
				trace(ObjectUtil.toString(item));
					
			}
			
			private function ns_onCuePoint(item:Object):void
			{
				trace("cue");
			}
			
			/*
			* menyambung dan mulai publish livestream
			*/
			private function startHandler(event:MouseEvent):void
			{
				stopBtn.enabled = true;
				iconrecord.enabled = true;
				buttonkamera1.enabled = true;
				buttonkamera2.enabled = true;
				startBtn.enabled =false;
				trace("Okay, let's connect now");
				
				nc = new NetConnection();
				nc.client=this;
				nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
				nc.connect(this.txtServer.text);
				
			}
			
			
			/*
			* Putus Server
			*/
			private function stopHandler(event:MouseEvent):void 
			{
				stopBtn.enabled = false;
				iconrecord.enabled = false;
				buttonkamera1.enabled = false;
				buttonkamera2.enabled = false;
				
				startBtn.enabled =true;
				if (ns)
				{
					trace("Clearing MetaData");
					ns.send("@clearDataFrame", "onMetaData");
				}
				trace("Now we're disconnecting");
				
				nc.close();
				
			}
			
				
			
			private function netStatusHandler(event:NetStatusEvent):void
			{
				trace("connected is: " + nc.connected );
				trace("event.info.level: " + event.info.level);
				trace("event.info.code: " + event.info.code);
				
				switch (event.info.code)
				{
					case "NetConnection.Connect.Success":
						trace("Congratulations! you're connected");
						publishLiveStream();
						break;
					case "NetConnection.Connect.Rejected":
						trace ("Oops! the connection was rejected");
						break;
					case "NetStream.Play.Stop":
						trace("The stream has finished playing");
						break;
					case "NetStream.Play.StreamNotFound":
						trace("The server could not find the stream you specified"); 
						break;
					case "NetStream.Publish.Start":
						
						trace("Adding metadata to the stream");
						var metaData:Object = new Object();
						metaData.title = "Stream Wisuda Unikom";
						metaData.width = 200;
						metaData.height = 150;
						ns.send("@setDataFrame", "onMetaData", metaData);
						break;
					
					case "NetStream.Publish.BadName":
						trace("The stream name is already used");
						break;
				}
						
			}
			
			public function onBWDone():void{
			}
			
			private function activityHandler(event:ActivityEvent):void {
				trace("activityHandler: " + event);
				trace("activating: " + event.activating);
			} 
			
			/*
			* live stream, attach camera dan microphone, dan
			* publish ke server
			*/
			private function publishLiveStream():void {
				ns = new NetStream(nc);
				ns.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
				var nsClient:Object = {};
				nsClient.onMetaData = ns_onMetaData;
				nsClient.onCuePoint = ns_onCuePoint;
				ns.client = nsClient;
				
				ns2 = new NetStream(nc);
				ns2.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
				var ns2Client:Object = {};
				ns2Client.onMetaData = ns_onMetaData;
				ns2Client.onCuePoint = ns_onCuePoint;
				ns2.client = ns2Client;
				
				var pilihan_kamera:String = list_kamera.selectedIndex.toString();
				var pilihan_microphone:int = list_microphone.selectedIndex;
				var pilihan_kamera2:String = list_kamera2.selectedIndex.toString();
				var pilihan_microphone2:int = list_microphone2.selectedIndex;
				camera = Camera.getCamera(pilihan_kamera);
				camera2 = Camera.getCamera(pilihan_kamera2);
				mic = Microphone.getMicrophone(pilihan_microphone);
				mic2 = Microphone.getMicrophone(pilihan_microphone2);
				
				if (camera != null){
					
					camera.addEventListener(ActivityEvent.ACTIVITY, activityHandler);
					
					video = new Video();
					video.smoothing=true;
					video.width=670;
					video.height=453;
					video.attachCamera(camera);
					
					video2 = new Video();
					video2.smoothing=true;
					video2.width=670;
					video2.height=453;
					video2.attachCamera(camera2);
									
					videoCodec = new H264VideoStreamSettings();
					videoCodec.setProfileLevel(H264Profile.BASELINE, H264Level.LEVEL_3_1);
					camera.setQuality(100000, 0);
					camera.setMode(640, 480, 30, true);
					camera2.setQuality(100000, 0);
					camera2.setMode(640,480,30,true);
					ns.videoStreamSettings = videoCodec;
					ns.attachCamera(camera);
					ns2.videoStreamSettings = videoCodec;
					ns2.attachCamera(camera2);
					uic.addChild(video);
					uic2.addChild(video2);
				
					
					
					
				}
				
				if (mic != null)
				{
					mic.addEventListener(ActivityEvent.ACTIVITY, activityHandler);
					mic.codec = "Speex";
					mic.rate = 44;
					
					ns.attachAudio(mic);
				}	
					if (mic2 != null) 
				{
					mic2.addEventListener(ActivityEvent.ACTIVITY, activityHandler);
					mic2.codec = "Speex";
					mic2.rate = 44;
					
					ns2.attachAudio(mic2);					
				}
				
				if (camera != null || mic != null)
				{
					// mulai publish
					// trigger NetStream.Publish.Start
					ns.publish(this.txtStream.text, "live");
				} else 
				{
					trace("Please check your camera and microphone");
				}
				
				/*if (camera2 != null || mic2 != null)
				{
					// mulai publish
					// trigger NetStream.Publish.Start
					ns2.publish(this.txtStream.text, "live");
				} else 
				{
					trace("Please check your camera and microphone");
				}*/
			} 
			
		]]>
	</fx:Script>
	
	<!--<mx:UIComponent id="uic" x="5" y="102" width="680" height="480" />-->
	

	
	<mx:VideoDisplay id="uic"
					 width="670"
					 height="453"
					 x="5"
					 y="132" />
	
	<mx:VideoDisplay id="uic2"
					 width="670"
					 height="453"
					 x="685"
					 y="132" />
	
	<mx:Button id="startBtn" x="15" y="105" label="Stream"/>
	
	<mx:Button enabled="false" id="stopBtn" x="93" y="105" label="Stop"/>
	
	<s:Image enabled="false" id="iconrecord" source="http://localhost/real/back/src/assets/record-icon.png" x="170" y="100" height="32" width="32" />
	
	<mx:ComboBox open="LiveStreams()"
				 close="LiveStreams()"
				 id="list_kamera"
				 dataProvider="{Camera.names}"
				 y="40"
				 x="90"/>
	
	<mx:ComboBox open="LiveStreams()"
				 close="LiveStreams()"
				 id="list_microphone"
				 dataProvider="{Microphone.names}"
				 y="40"
				 x="425"/>
	
	<mx:ComboBox open="LiveStreams()"
				 close="LiveStreams()"
				 id="list_kamera2"
				 dataProvider="{Camera.names}"
				 y="75"
				 x="90"/>
	
	<mx:ComboBox open="LiveStreams()"
				 close="LiveStreams()"
				 id="list_microphone2"
				 dataProvider="{Microphone.names}"
				 y="75"
				 x="425"/>
	
	<s:TextInput x="90" y="11" id="txtServer" text="rtmp://localhost/live"/>
	<s:TextInput x="425" y="11" id="txtStream" text="wisuda"/>
	<s:Label x="15" y="46" text="Pilih Device"/>
	<s:Label x="320" y="46" text="Pilih Microphone"/>
	<s:Label x="15" y="80" text="Pilih Device2"/>
	<s:Label x="320" y="80" text="Pilih Microphone2"/>
	<s:Label x="15" y="15" text="Server"/>
	<s:Label x="320" y="16" text="Judul"/>
	<s:Button x="5" y="590" label="Kembali" click="back(event)" />
	<s:Button x="82" y="590" enabled="false" id="buttonkamera1" label="kamera 1" click="kamera1(event)" />
	<s:Button x="160" y="590" enabled="false" id="buttonkamera2" label="kamera 2" click="kamera2(event)" />
	
	
	
</s:Application>